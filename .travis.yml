language: python

matrix:
    include:
        - os: linux
          language: python
          python: 3.6
          env: PYTHONVER=3.6

        - os: linux
          language: python
          python: 3.7
          env: PYTHONVER=3.7

        - os: linux
          language: python
          python: 3.8
          env: PYTHONVER=3.8

        - os: osx
          language: generic
          python: 3.6
          env: PYTHONVER=3.6

        - os: osx
          language: generic
          python: 3.7
          env: PYTHONVER=3.7

        - os: osx
          language: generic
          python: 3.8
          env: PYTHONVER=3.8

install:
    - if [[ $TRAVIS_OS_NAME == "osx" ]]; then
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
      else
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi;
      echo "DONE"
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q -y --all
    - conda create -y -n test python=$PYTHONVER
    - source activate test
    - conda update -q -y --all
    - conda install -q -y -c conda-forge six numpy pandas pytables pyyaml
    - conda install -q -y -c conda-forge sphinx sphinx_rtd_theme ply sympy
    - conda install -q -y -c conda-forge pandoc pypandoc nbsphinx ipython seaborn
    - conda install -q -y -c conda-forge coveralls coverage'<=4.5.4' pytest pytest-cov
    - conda install -q -y -c conda-forge numexpr nodejs ipywidgets bokeh
    - conda install -q -y -c conda-forge numba
    - conda install -q -y -c anaconda h5py
    - pip install travis-sphinx codacy-coverage
    - git clone https://github.com/exa-analytics/exa.git
    - pip install exa/
    - rm -rf exa
    - pip install .

script:
    - export PYTHONDONTWRITEBYTECODE=1
    - pytest --cov
    - if [[ $TRAVIS_OS_NAME == "linux" ]] && [[ $PYTHONVER == 3.8 ]]; then
          coverage run --source=exatomic setup.py test;
          rm -rf docs/source/*.txt;
          SPHINX_APIDOC_OPTIONS=members,undoc-members,show-inheritance sphinx-apidoc -eM -s txt -o docs/source/ exatomic *test*;
          travis-sphinx build;
      fi

after_success:
    - if [[ $TRAVIS_OS_NAME == "linux" ]] && [[ $PYTHONVER == 3.8 ]]; then
          coveralls;
          python-codacy-coverage -r coverage.xml;
          travis-sphinx deploy;
      fi
